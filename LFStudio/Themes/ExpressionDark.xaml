<ResourceDictionary    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:adRes="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    >


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AvalonDock;component/themes\generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>
	
   <SolidColorBrush x:Key="ColorForMenuAndToolBar" Color="#2D2D2D"/>  
<SolidColorBrush x:Key="winbkgcolor" Color="#2D2D2D"/>
  
    <!--Default brushes-->
    <!-- ManagedContentTabControlNormalBorderBrush -->
    <SolidColorBrush x:Key="ManagedContentTabControlNormalBorderBrush"
                     Color="Transparent"/>

    <!-- ad:AvalonDockBrushes.DefaultBackgroundBrush -->
    <SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DefaultBackgroundBrush}}" 
        Color="#444444"/>

    <!--Foregroung Colors-->
    <SolidColorBrush x:Key="LightForegroundBrush" Color="White"/>
    
    <SolidColorBrush x:Key="DarkForegroundBrush" Color="Black"/>

    <!--Brushes for tab item header-->
    <!-- ManagedContentTabItemNormalBackground -->
    <SolidColorBrush x:Key="ManagedContentTabItemNormalBackground" Color="#333333"/>

    <!-- ManagedContentTabItemInvNormalBackground -->
    <LinearGradientBrush x:Key="ManagedContentTabItemInvNormalBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFECEBE6"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- ManagedContentTabItemHotBackground -->
    <SolidColorBrush x:Key="ManagedContentTabItemHotBackground"
                         Color="#595959"/>

    <!-- ManagedContentTabItemInvHotBackground -->
    <LinearGradientBrush x:Key="ManagedContentTabItemInvHotBackground"
                         StartPoint="0,1"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#50FFFCF2" Offset="0" />
            <GradientStop Color="#50FFEDBA" Offset="0.5" />
            <GradientStop Color="#50FFE8A6" Offset="0.5" />
            <GradientStop Color="#50FFE8A6" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- ManagedContentTabItemSelectedBackground -->
    <SolidColorBrush x:Key="ManagedContentTabItemSelectedBackground"
                     Color="#595959"/>

    <!-- ManagedContentTabItemDisabledBackground -->
    <SolidColorBrush x:Key="ManagedContentTabItemDisabledBackground"
                     Color="#FFF5F4EA"/>
    
    <!-- ManagedContentTabItemSelectedBorderBackround -->
    <SolidColorBrush x:Key="ManagedContentTabItemSelectedBorderBackround" 
                     Color="White"/>

    <!--ManagedContentTabItemNormalBorderBrush-->
    <SolidColorBrush x:Key="ManagedContentTabItemNormalBorderBrush" 
                     Color="Transparent" />

    <!--ManagedContentTabItemSelectedBorderBrush -->
    <SolidColorBrush x:Key="ManagedContentTabItemSelectedBorderBrush"
                     Color="White"/>
    
    <!--ManagedContentTabItemHotBorderBrush -->
    <SolidColorBrush x:Key="ManagedContentTabItemHotBorderBrush"
                     Color="White"/>

    <!--ManagedContentTabItemDisabledBorderBrush -->
    <SolidColorBrush x:Key="ManagedContentTabItemDisabledBorderBrush"
                     Color="White"/>

    <!--Brushes for dockable pane headers-->
    <LinearGradientBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DockablePaneTitleBackgroundSelected}}"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#FFFCF2" Offset="0" />
        <GradientStop Color="#FFEDBA" Offset="0.5" />
        <GradientStop Color="#FFE8A6" Offset="0.5" />
        <GradientStop Color="#FFE8A6" Offset="1" />
    </LinearGradientBrush>


    <!--DockablePaneTitleBackground-->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DockablePaneTitleBackground}}"
                     Color="Transparent"/>
    
    <!--DockablePaneTitleForeground-->
    <SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DockablePaneTitleForeground}}" 
        Color="White"/>

    <!--DockablePaneTitleForegroundSelected-->
    <SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DockablePaneTitleForegroundSelected}}" 
        Color="White"/>

    <!--Brushes for document headers-->
    <!--DocumentHeaderBackground-->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderBackground}}" 
                     Color="#333333"/>
        
    <!--DocumentHeaderBorderBrushMouseOver-->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderBorderBrushMouseOver}}" 
                     Color="#595959"/>

    <!--DocumentHeaderForeground-->
    <SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderForeground}}" 
        Color="White"/>

    <!--DocumentHeaderForegroundSelected-->
    <SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderForegroundSelected}}" 
        Color="White"/>

    <!--DocumentHeaderForegroundSelectedActivated-->
    <SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderForegroundSelectedActivated}}" 
        Color="White"/>

    <!--DefaultDocumentPaneBackground-->
    <DrawingBrush x:Key="DefaultDocumentPaneBackground" 
	                  TileMode="Tile"  
	                Viewport="0 0 20 20" 
					ViewportUnits="Absolute"
					Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="#2F2F2F">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,10,10"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="#2D2D2D">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,10,10,10"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="#2D2D2D">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="10,0,10,10"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="#2F2F2F">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="10,10,10,10"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!--DocumentHeaderBackgroundSelected-->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderBackgroundSelected}}" 
                     Color="#595959"/>    

    <!--DocumentHeaderBackgroundSelectedActivated-->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderBackgroundSelectedActivated}}" 
                     Color="#595959"/>

    <!--DocumentHeaderBackgroundMouseOver-->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderBackgroundMouseOver}}" 
                     Color="#595959"/>

    <!--PaneHeaderCommandBorderBrush-->
    <LinearGradientBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.PaneHeaderCommandBorderBrush}}"
                         StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#50FFE8A6" Offset="0" />
            <GradientStop Color="#50FFE8A6" Offset="0.5" />
            <GradientStop Color="#50FFEDBA" Offset="0.5" />
            <GradientStop Color="#50FFFCF2" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.PaneHeaderCommandBackground}}"
                         Color="White"/>

    <!--DocumentHeaderBorderSelected-->
    <SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderBorderSelected}}" 
        Color="#CED4DF"/>
    
    <!--DocumentHeaderBorderSelectedActivated-->
    <SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DocumentHeaderBorderSelectedActivated}}" 
        Color="#FFE8A6"/>

    <!--DockingManager-->
    <Style x:Key="{x:Type ad:DockingManager}" TargetType="{x:Type ad:DockingManager}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DefaultBackgroundBrush}}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:DockingManager}">
                    <Grid
                        Background="{TemplateBinding Background}"
                        >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Name="PART_LeftAnchorTabPanel" 
                                Grid.Column="0" Grid.Row="1" Orientation="Vertical">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type ad:DockablePaneAnchorTabGroup}">
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value >
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" Value="0,2,2,0"/>
                                </Style>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="0,0,3,3"/>
                                </Style>
                            </StackPanel.Resources>
                        </StackPanel>
                        <StackPanel Name="PART_RightAnchorTabPanel" Grid.Column="2" Grid.Row="1"  Orientation="Vertical">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type ad:DockablePaneAnchorTabGroup}">
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value >
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" Value="2,2,0,0"/>
                                </Style>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="3,3,0,0"/>
                                </Style>
                            </StackPanel.Resources>
                        </StackPanel>
                        <StackPanel Name="PART_TopAnchorTabPanel" Grid.Column="1" Grid.Row="0" Orientation="Horizontal"/>
                        <StackPanel Name="PART_BottomAnchorTabPanel" Grid.Column="1" Grid.Row="2" Orientation="Horizontal"/>
                        <Border 
                            x:Name="PART_InternalContainer"
                            Background="{TemplateBinding Background}"
                            Grid.Column="1" Grid.Row="1"
                            Padding="4">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DockableContentTabItemStyle-->
    <Style x:Key="DockableContentTabItemStyle" TargetType="{x:Type ad:DockableContent}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:DockableContent}">
                    <Grid SnapsToDevicePixels="True" Margin="0,0,-10, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Border 
						    x:Name="PART_DragArea" 
                            Background="{StaticResource ManagedContentTabItemNormalBackground}"   
                            CornerRadius="3,0,0,0"
                            
                            >
                            <Grid Margin="4,2,4,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock 
								        x:Name="tabItemTitle"
                                        Grid.Column="0"
								        TextTrimming="CharacterEllipsis" 
                                        TextWrapping="NoWrap"
								        Text="{TemplateBinding Title}" 
								        Margin="2,0,0,0" VerticalAlignment="Center"
								        Foreground="{StaticResource ResourceKey=LightForegroundBrush}"/>
                                <Button Grid.Column="1" 
                                        x:Name="intCloseButton"
                                        Visibility="Collapsed"
                                        Margin="2,0,0,0"
                                        Style="{StaticResource PaneHeaderCommandStyle}" 
                                        Command="ad:ManagedContentCommands.Close"
                                        Width="13" Height="13" Opacity="0.6">
                                    <ad:ImageEx Source="pack://application:,,,/AvalonDock;component/Resources/Images/PinClose.png" />
                                </Button>
                            </Grid>
                        </Border>
                        <Path x:Name="intPathLabel" Stretch="Fill"  Grid.Column="1" Fill="{StaticResource ManagedContentTabItemNormalBackground}" Data="M0,0 L20,20 L0,20 L0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected"
								 Value="true">
                            <Setter Property="BorderBrush"
									Value="{StaticResource ManagedContentTabItemSelectedBorderBrush}" TargetName="PART_DragArea"/>
                            <Setter Property="Background"
									Value="{StaticResource ManagedContentTabItemSelectedBackground}" TargetName="PART_DragArea"/>
                            <Setter Property="Fill"
									Value="{StaticResource ManagedContentTabItemSelectedBackground}" TargetName="intPathLabel"/>
                            <Setter Property="Panel.ZIndex" 
                                    Value="100" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ContainerPane.HasSingleItem}"  Value="false"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Selector.IsSelected)}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" 
                                    TargetName="intCloseButton"
                                    Value="Visible" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="Selector.IsSelected" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource ManagedContentTabItemHotBorderBrush}" 
                                    TargetName="PART_DragArea" />
                            <Setter Property="Background" Value="{StaticResource ManagedContentTabItemHotBackground}" 
                                    TargetName="PART_DragArea" />
                            <Setter Property="Fill"
									Value="{StaticResource ManagedContentTabItemSelectedBackground}" TargetName="intPathLabel"/>
                            <Setter Property="Panel.ZIndex" Value="99" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{StaticResource ManagedContentTabItemDisabledBorderBrush}"
                                    TargetName="PART_DragArea" />
                            <Setter Property="Background" Value="{StaticResource ManagedContentTabItemDisabledBackground}"
                                    TargetName="PART_DragArea" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    TargetName="tabItemTitle" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DockablePane-->
    <Style x:Key="{x:Type ad:DockablePane}" TargetType="{x:Type ad:DockablePane}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DefaultBackgroundBrush}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:DockablePane}">
                    <Border Focusable="False"
                            Background="{TemplateBinding Background}"
                            >
                        <Grid FocusManager.FocusedElement="{Binding ElementName=PART_SelectedContent}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border 
                                    Grid.Row="0" Focusable="False" 
							        Background="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DockablePaneTitleBackground}}}"
                                    MinHeight="20">
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="btnPinAutoHide" Grid.Column="1" Style="{StaticResource PaneHeaderCommandStyle}" Command="ad:DockablePaneCommands.ToggleAutoHide"
                                                Width="15" Height="15" VerticalAlignment="Center" Opacity="0.6">
                                        <ad:ImageEx Source="Images/ExpDark/PinAutoHide.png" Width="13"  />
                                    </Button>
                                    <Button x:Name="PART_CloseButton" Grid.Column="2" Margin="6,0,2,0" 
                                            Style="{StaticResource PaneHeaderCommandStyle}" 
                                            Width="14"
                                            Height="13"
                                            Command="ad:DockablePaneCommands.Close" Opacity="0.8">
                                        <ad:ImageEx Source="Images/ExpDark/PinClose.png" Width="13" />
                                    </Button>
                                    <ad:DockableTabPanel	
                                                IsItemsHost="True" 
                                                TabItemStyle="{DynamicResource DockableContentTabItemStyle}"/>                                    
                                </Grid>
                            </Border>
                            <Border Grid.Row="1" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.Background}"   
                                    >
                                <ContentPresenter 
                                        x:Name="PART_SelectedContent"
                                        Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.Content}"
								        KeyboardNavigation.TabNavigation="Local"
								        KeyboardNavigation.DirectionalNavigation="Contained"
								        KeyboardNavigation.TabIndex="1"
                                        />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="CanAutohide" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="btnPinAutoHide"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},  Path=SelectedItem.IsCloseable}" Value="false">
                            <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},  Path=SelectedItem.State}" Value="AutoHide">
                            <Setter Property="LayoutTransform" TargetName="btnPinAutoHide">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FloatingDockablePane -->
    <Style x:Key="{x:Type ad:FloatingDockablePane}" TargetType="{x:Type ad:FloatingDockablePane}" >
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DefaultBackgroundBrush}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:DockablePane}">
                    <Border Focusable="False"
                            Background="{TemplateBinding Background}">

                            <Border Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.Background}"   
                                    >
                                <ContentPresenter 
                                        x:Name="PART_SelectedContent"
                                        Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.Content}"
								        KeyboardNavigation.TabNavigation="Local"
								        KeyboardNavigation.DirectionalNavigation="Contained"
								        KeyboardNavigation.TabIndex="1"
                                        />
                            </Border>

                    </Border>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <!--DocumentTabItemStyle-->
    <Style x:Key="DocumentTabItemStyle" TargetType="{x:Type ad:ManagedContent}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:ManagedContent}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="tabItemIntBorder"
                            BorderThickness="1,1,1,0"
                            Padding="5,0,5,4"
                            Margin="-1,0,2,-4"
                            CornerRadius="3,3,0,0"
                            Background="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DocumentHeaderBackground}}}">
                            <StackPanel x:Name="PART_DragArea" 
                                Orientation="Horizontal"
                                Background="Transparent"
                                Margin="0,2,0,2"
                                >
                                <!--This image with width=0 is required to connect the icon visual to the presentation source,
                                without this navigatorwindow won't work-->
                                <Image Source="{TemplateBinding Icon}" Width="0"/>
                                <TextBlock 
							        x:Name="tabItemTitle" 
							        TextTrimming="CharacterEllipsis" 
                                    TextWrapping="NoWrap"
                                    Text="{TemplateBinding Title}" 
							        Foreground="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DocumentHeaderForeground}}}"/>

                                <ad:ImageEx Source="pack://application:,,,/AvalonDock;component/Resources/Images/Locked.png" x:Name="PART_LockedIcon" Margin="2,0,0,0" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center" Width="6"/>
                            
                            <Button x:Name="PART_CloseButton"  Visibility="Collapsed" Margin="6,0,2,0" 
                                    Style="{StaticResource PaneHeaderCommandStyle}" 
                                    Width="14"
                                    Height="13"
                                    ToolTip="{x:Static adRes:Resources.ManagedContentCommands_Close}"
                                    Command="ad:ManagedContentCommands.Close" Opacity="0.8">
                                <Image Source="Images/ExpDark/PinClose.png" Stretch="None"/>
                            </Button>    
                        </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                           <Setter Property="Background" 
                                    TargetName="tabItemIntBorder" 
                                    Value="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DocumentHeaderBackgroundSelectedActivated}}}"
                                    />
                            <Setter Property="Visibility"
                                    TargetName="PART_CloseButton"
                                    Value="Visible"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="tabItemIntBorder" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" 
                                    TargetName="tabItemIntBorder" 
                                    Value="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DocumentHeaderBackgroundMouseOver}}}"
                                    />
                            <Setter Property="BorderBrush" 
                                    TargetName="tabItemIntBorder" 
                                    Value="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DocumentHeaderBorderBrushMouseOver}}}"
                                    />
                        </MultiTrigger>
                        <Trigger Property="IsLocked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_LockedIcon"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DocumentPane-->
    <Style x:Key="{x:Type ad:DocumentPane}" TargetType="{x:Type ad:DocumentPane}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DefaultBackgroundBrush}}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:DocumentPane}" >
                    <ControlTemplate.Resources>
                        <ContextMenu x:Key="DocumentsListMenu" StaysOpen="True" />
                    </ControlTemplate.Resources>
                    <Border 
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_Header" 
							    Grid.Row="0" 
							    Focusable="False">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="18"/>                                           
                                    </Grid.ColumnDefinitions>
                                    <ad:DocumentTabPanel 
                                      x:Name="paneTabsPanel" 
                                      Panel.ZIndex ="1" 
                                      IsItemsHost="True"
                                      TabItemStyle="{StaticResource DocumentTabItemStyle}"/>
                                    <Button x:Name="PART_ShowContextMenuButton" 
                                            Grid.Column="1"
                                            Width="15" Height="15" 
                                            Style="{StaticResource PaneHeaderCommandStyle}">
                                        <Image x:Name="ShowContextMenuIcon" Source="pack://application:,,,/AvalonDock;component/Resources/Images/PinMenu.png" Width="13" Height="13" Stretch="None"/>
                                    </Button>                                    
                                </Grid>
                            </Border>
                            <Grid Grid.Row="1">
                                <Border
                                    Background="{StaticResource DefaultDocumentPaneBackground}">
                                    <ContentPresenter 
                                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.Content}"
                                            KeyboardNavigation.TabNavigation="Local"
								            KeyboardNavigation.DirectionalNavigation="Contained"/>                                
                                </Border>                            
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="ShowHeader" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Header" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsMainDocumentPane, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Source" Value="pack://application:,,,/AvalonDock;component/Resources/Images/PinDocMenu.png" TargetName="ShowContextMenuIcon"/>
                        </DataTrigger>

                        
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="0" To="1"  Duration="0:0:0.200" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DockablePaneAnchorTab-->
    <Style x:Key="{x:Type ad:DockablePaneAnchorTab}" TargetType="{x:Type ad:DockablePaneAnchorTab}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:DockablePaneAnchorTab}">
                    <Grid>
                        <Border 
                            Name="PART_Border" 
                            Background="{DynamicResource ManagedContentTabItemNormalBackground}"
                            TextBlock.Foreground="{StaticResource ResourceKey=LightForegroundBrush}"
                            Padding="4,0,4,0">
                            <TextBlock 
                                Grid.Column="1"
                                Text="{TemplateBinding Title}"  
                                Margin="4,2,2,2"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Anchor" >
                            <Trigger.Value>
                                <ad:AnchorStyle>
                                    Left
                                </ad:AnchorStyle>
                            </Trigger.Value>
                            <Setter TargetName="PART_Border" Property="CornerRadius" Value="2,2,0,0"/>
                        </Trigger>
                        <Trigger Property="Anchor"  >
                            <Trigger.Value>
                                <ad:AnchorStyle>
                                    Right
                                </ad:AnchorStyle>
                            </Trigger.Value>
                            <Setter TargetName="PART_Border" Property="CornerRadius" Value="0,0,2,2"/>
                        </Trigger>
                        <Trigger Property="Anchor"  >
                            <Trigger.Value>
                                <ad:AnchorStyle>
                                    Bottom
                                </ad:AnchorStyle>
                            </Trigger.Value>
                            <Setter TargetName="PART_Border" Property="CornerRadius" Value="2,2,0,0"/>
                        </Trigger>
                        <Trigger Property="Anchor"  >
                            <Trigger.Value>
                                <ad:AnchorStyle>
                                    Top
                                </ad:AnchorStyle>
                            </Trigger.Value>
                            <Setter TargetName="PART_Border" Property="CornerRadius" Value="0,0,2,2"/>
                        </Trigger>
                        
                        
                        <Trigger Property="IsMouseOver"
								 Value="true">
                            <Setter Property="Background" 
                                    Value="{DynamicResource ManagedContentTabItemSelectedBackground}" 
                                    TargetName="PART_Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DockablePaneAnchorTabGroup-->
    <Style x:Key="{x:Type ad:DockablePaneAnchorTabGroup}" TargetType="{x:Type ad:DockablePaneAnchorTabGroup}">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
    </Style>

    <!--OverlayWindow-->
    <Style x:Key="{x:Type ad:OverlayWindow}" TargetType="{x:Type ad:OverlayWindow}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:OverlayWindow}">
                    <Grid SnapsToDevicePixels="True" Opacity="0.9">
                        <Canvas>
                            <Border x:Name="PART_SelectionBox" Background="#333333" BorderBrush="#6495ED" BorderThickness="2" Opacity="0.4" Visibility="Hidden"/>
                        </Canvas>
                        <Grid x:Name="panelDrag" >
                            <Border x:Name="PART_btnDockLeft" Width="10" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                            <Border x:Name="PART_btnDockRight" Width="10" VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                            <Border x:Name="PART_btnDockBottom" Height="10" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                            <Border x:Name="PART_btnDockTop" Height="10" VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                        </Grid>
                        <Canvas>
                            <Grid Name="PART_gridPaneRelativeDockingOptions" Visibility="Collapsed" ><!--Width="103" Height="101"-->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="20"/>
                                    <ColumnDefinition MaxWidth="20"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MaxWidth="20"/>
                                    <ColumnDefinition MaxWidth="20"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="20"/>
                                    <RowDefinition MaxHeight="20"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition MaxHeight="20"/>
                                    <RowDefinition MaxHeight="20"/>
                                </Grid.RowDefinitions>
                                <Border Name="PART_btnDockPaneTop" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="5"/>
                                <Border Name="PART_btnDockPaneRight" Grid.Column="4" Grid.Row="1" Grid.RowSpan="4"/>
                                <Border Name="PART_btnDockPaneBottom" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="5"/>
                                <Border Name="PART_btnDockPaneLeft" Grid.Column="0" Grid.Row="1"  Grid.RowSpan="4"/>
                                <Border Name="PART_btnDockPaneInto" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="5"/>
                            </Grid>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="OverlayButtonHover" Value="DropBorderLeft">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockLeftHover.PNG" TargetName="IMG_DockLeft"/>
                        </Trigger>
                        <Trigger Property="OverlayButtonHover" Value="DropBorderRight">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockRightHover.PNG" TargetName="IMG_DockRight"/>
                        </Trigger>
                        <Trigger Property="OverlayButtonHover" Value="DropBorderTop">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockTopHover.PNG" TargetName="IMG_DockTop"/>
                        </Trigger>
                        <Trigger Property="OverlayButtonHover" Value="DropBorderBottom">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockBottomHover.PNG" TargetName="IMG_DockBottom"/>
                        </Trigger>
                        <Trigger Property="OverlayButtonHover" Value="DropPaneInto">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockPaneInto.PNG" TargetName="IMG_DockPane"/>
                        </Trigger>
                        <Trigger Property="OverlayButtonHover" Value="DropPaneLeft">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockPaneLeft.PNG" TargetName="IMG_DockPane"/>
                        </Trigger>
                        <Trigger Property="OverlayButtonHover" Value="DropPaneRight">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockPaneRight.PNG" TargetName="IMG_DockPane"/>
                        </Trigger>
                        <Trigger Property="OverlayButtonHover" Value="DropPaneTop">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockPaneTop.PNG" TargetName="IMG_DockPane"/>
                            </Trigger>
                        <Trigger Property="OverlayButtonHover" Value="DropPaneBottom">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockPaneBottom.PNG" TargetName="IMG_DockPane"/>
                        </Trigger>
                        <Trigger Property="OverlayButtonHover" Value="None">
                            <Setter Property="Source" Value="/AvalonDock;component/resources/Images/Aero/AeroDockPane.PNG" TargetName="IMG_DockPane"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
    <!--DockableFloatingWindow-->
    <Style x:Key="{x:Type ad:DockableFloatingWindow}" TargetType="{x:Type ad:DockableFloatingWindow}">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:DockableFloatingWindow}">
                    <Border x:Name="ExtBorder"
                            Background="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DefaultBackgroundBrush}}}"
                            CornerRadius="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="5"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="5"/>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="5"/>
                            </Grid.RowDefinitions>

                            <ad:Resizer x:Name="PART_LeftAnchor" Cursor="SizeWE" VerticalAlignment="Stretch" Width="4" Grid.Column="0" Grid.Row="1" Grid.RowSpan="2"/>
                            <ad:Resizer x:Name="PART_RightAnchor" Cursor="SizeWE" VerticalAlignment="Stretch" Width="4" Grid.Column="2" Grid.Row="1" Grid.RowSpan="2"/>
                            <ad:Resizer x:Name="PART_TopAnchor" Cursor="SizeNS" HorizontalAlignment="Stretch" Height="4" Grid.Row="0" Grid.Column="1"/>
                            <ad:Resizer x:Name="PART_BottomAnchor" Cursor="SizeNS" HorizontalAlignment="Stretch" Height="4" Grid.Row="3" Grid.Column="1"/>

                            <ad:Resizer x:Name="PART_LeftTopAnchor" Cursor="SizeNWSE" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="4" Height="4" 
                                        Grid.Row="0" Grid.Column="0"/>
                            <ad:Resizer x:Name="PART_LeftBottomAnchor" Cursor="SizeNESW" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="4" Height="4" 
                                        Grid.Row="3" Grid.Column="0"/>
                            <ad:Resizer x:Name="PART_RightTopAnchor" Cursor="SizeNESW" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="4" Height="4" 
                                        Grid.Row="0" Grid.Column="2"/>
                            <ad:Resizer x:Name="PART_RightBottomAnchor" Cursor="SizeNWSE" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="4" Height="4" 
                                        Grid.Row="3" Grid.Column="3"/>
                            <Border  
                                Grid.Row="2"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"  
                                BorderBrush="{TemplateBinding BorderBrush}"  
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter  />
                            </Border>
                            
                            <Border x:Name="PART_MoveAnchor" 
                                    Grid.Row="1" 
                                    Grid.Column="1" 
                                    CornerRadius="2,2,0,0" 
                                    Background="Transparent">
                                    <Grid SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <Border 
						                    Background="{StaticResource ManagedContentTabItemHotBackground}"   
                                            CornerRadius="3,0,0,0">
                                            <Grid Margin="4,2,4,2">
                                                <TextBlock 
								                    x:Name="tabItemTitle"
                                                    Grid.Column="0"
								                    TextTrimming="CharacterEllipsis" 
                                                    TextWrapping="NoWrap"
								                    Text="{TemplateBinding Title}" 
								                    Margin="2,0,0,0" VerticalAlignment="Center"
								                    Foreground="{StaticResource ResourceKey=LightForegroundBrush}"/>
                                            </Grid>
                                        </Border>
                                        <Path x:Name="intPathLabel" Stretch="Fill"  Grid.Column="1" Fill="{StaticResource ManagedContentTabItemHotBackground}" Data="M0,0 L20,20 L0,20 L0,0"/>
                                    </Grid>
                            </Border>

                            <Button x:Name="PART_CloseButton" 
                                    Grid.Row="1" 
                                    Grid.Column="1"
                                    Style="{StaticResource PaneHeaderCommandStyle}" 
                                    HorizontalAlignment="Right"
                                    Width="14"
                                    Height="13"
                                    Command="ad:DockablePaneCommands.Close"
                                    CommandTarget="{Binding HostedPane, RelativeSource={RelativeSource TemplatedParent}}"
                                    Opacity="0.8">
                                <ad:ImageEx Source="Images/ExpDark/PinClose.png" Width="13"  />
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>       
    </Style>

    <!--DocumentFloatingWindow-->
    <Style x:Key="{x:Type ad:DocumentFloatingWindow}" TargetType="{x:Type ad:DocumentFloatingWindow}">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:DocumentFloatingWindow}">
                    <Border x:Name="ExtBorder">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="5"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="5"/>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="5"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_MoveAnchor" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="3"
                                    Background="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DocumentHeaderBackgroundSelected}}}">
                                <Grid x:Name="intTitleGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="16"/>
                                        <ColumnDefinition Width="16"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="intTitle" VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                                               Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HostedPane.SelectedItem.Title}" 
                                               IsHitTestVisible="False" Margin="2,0,0,0"
                                               Foreground="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DocumentHeaderForeground}}}"
                                               />
                                    <Border x:Name="PART_ShowContextMenuButton" Grid.Column="1" Style="{StaticResource PaneHeaderContextMenuCommandStyle}"
                                                    Width="15" Height="15" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.6">
                                        <Image Source="pack://application:,,,/AvalonDock;component/Resources/Images/PinMenu.png" Width="13" Height="13" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None"/>
                                    </Border>
                                    <Button x:Name="PART_CloseButton" Grid.Column="2" Style="{StaticResource PaneHeaderCommandStyle}"
                                            Command="ad:DocumentPaneCommands.CloseThis" CommandTarget="{TemplateBinding Content}"       
                                            Width="15" Height="15" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.6">
                                        <Image Source="pack://application:,,,/AvalonDock;component/Resources/Images/PinClose.png" Width="13" Height="13" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None"/>
                                    </Button>
                                </Grid>
                            </Border>

                            <Border  
                                x:Name="intContentBorder"
                                Grid.Row="2" Grid.RowSpan="2"
                                Grid.Column="0" Grid.ColumnSpan="3"
                                Background="{TemplateBinding Background}"  
                                BorderBrush="{DynamicResource {ComponentResourceKey {x:Type ad:DockingManager}, {x:Static ad:AvalonDockBrushes.DocumentHeaderBackground}}}"
                                BorderThickness="4">
                            </Border>
                            <ContentPresenter 
                                Grid.Row="2" Grid.RowSpan="2"
                                Grid.Column="0" Grid.ColumnSpan="3"
                                Margin="4"
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HostedPane.SelectedItem.Content}"
                                />                            
                            <ad:Resizer x:Name="PART_LeftAnchor" Cursor="SizeWE" VerticalAlignment="Stretch" Width="4" Grid.Column="0" Grid.Row="1" Grid.RowSpan="2"/>
                            <ad:Resizer x:Name="PART_RightAnchor" Cursor="SizeWE" VerticalAlignment="Stretch" Width="4" Grid.Column="2" Grid.Row="1" Grid.RowSpan="2"/>
                            <ad:Resizer x:Name="PART_TopAnchor" Cursor="SizeNS" HorizontalAlignment="Stretch" Height="4" Grid.Row="0" Grid.Column="1"/>
                            <ad:Resizer x:Name="PART_BottomAnchor" Cursor="SizeNS" HorizontalAlignment="Stretch" Height="4" Grid.Row="3" Grid.Column="1"/>

                            <ad:Resizer x:Name="PART_LeftTopAnchor" Cursor="SizeNWSE" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="4" Height="4" 
                                        Grid.Row="0" Grid.Column="0"/>
                            <ad:Resizer x:Name="PART_LeftBottomAnchor" Cursor="SizeNESW" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="4" Height="4" 
                                        Grid.Row="3" Grid.Column="0"/>
                            <ad:Resizer x:Name="PART_RightTopAnchor" Cursor="SizeNESW" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="4" Height="4" 
                                        Grid.Row="0" Grid.Column="2"/>
                            <ad:Resizer x:Name="PART_RightBottomAnchor" Cursor="SizeNWSE" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="4" Height="4" 
                                        Grid.Row="3" Grid.Column="3"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Navigator Window  START -->
    <SolidColorBrush x:Key="NavigatorWindowBackground" Color="#666666"/>

    <SolidColorBrush x:Key="NavigatorWindowDocumentsBackground" Color="#333333"/>
    
    <SolidColorBrush x:Key="NavigatorWindowSelectedContentBackground" Color="#BDBDBD"/>    

    <DataTemplate x:Key="NavigatorWindowDocumentsListItemTemplate" DataType="{x:Type ad:NavigatorWindowDocumentItem}">
        <Border Background="Transparent" Padding="0,2,0,2">
            <Grid>
                <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" Margin="4,0,0,0" TextWrapping="NoWrap" Grid.Column="1"/>
            </Grid>
        </Border>
    </DataTemplate>

    <Style x:Key="NavigatorWindowDocumentsListItemContainerStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border 
				            x:Name="intMouseOverBorder" 
                            Grid.ColumnSpan="2" 
				            CornerRadius="2" 
				            BorderThickness="1"
                            Opacity="0.5"
				            Background="{StaticResource NavigatorWindowSelectedContentBackground}"
                            Visibility="Collapsed">                            
                        </Border>
                        <ContentPresenter TextBlock.Foreground="{StaticResource ResourceKey=LightForegroundBrush}" x:Name="intContent"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="intMouseOverBorder"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="intMouseOverBorder"/>
                            <Setter Property="Opacity" Value="1.0" TargetName="intMouseOverBorder"/>
                            <Setter Property="TextBlock.Foreground" TargetName="intContent" Value="{StaticResource ResourceKey=DarkForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigatorWindowDocumentsListStyle" TargetType="ListBox">
        <Setter Property="ItemTemplate" Value="{StaticResource NavigatorWindowDocumentsListItemTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource NavigatorWindowDocumentsListItemContainerStyle}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <Style x:Key="{x:Type ad:NavigatorWindow}"  TargetType="{x:Type ad:NavigatorWindow}">
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ad:NavigatorWindow}">
                    <Border MinWidth="400" MaxHeight="500" TextBlock.Foreground="{StaticResource ResourceKey=LightForegroundBrush}" Background="{StaticResource NavigatorWindowBackground}" BorderBrush="{StaticResource NavigatorWindowBorderBrush}" BorderThickness="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="22"/>
                            </Grid.RowDefinitions>
                            <Border Margin="2">
                                <TextBlock Text="Switch To"/>
                            </Border>
                            <Border Grid.Row="1" Background="{StaticResource NavigatorWindowDocumentsBackground}" CornerRadius="3">
                                <ListBox x:Name="activeFileList"
                                        ItemsSource="{TemplateBinding Documents}" 
								        Style="{StaticResource NavigatorWindowDocumentsListStyle}">
                                </ListBox>
                            </Border>

                            <Border Grid.Row="2" Margin="2">
                                <TextBlock Text="{Binding Path=SelectedItem.InfoTip, ElementName=activeFileList}" VerticalAlignment="Center" TextWrapping="Wrap"/>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>    
    <!--NavigatorWindow END-->
	  <Style TargetType="ToolBar">
        <Setter Property="Background" Value="{StaticResource ColorForMenuAndToolBar}"/>       
    </Style>    
    <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#CCC" Offset="0.0"/>
        <GradientStop Color="#444" Offset="1.0"/>
    </LinearGradientBrush>
    <!-- LightBrush is used for content areas such as Menu, Tab Control background -->
    <LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#2D2D2D" Offset="0.0"/>
        <GradientStop Color="#2D2D2D" Offset="1.5"/>
    </LinearGradientBrush>
    <!-- Disabled Brushes are used for the Disabled look of each control -->
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>
    <!-- Used for background of ScrollViewer, TreeView, ListBox, Expander, TextBox, Tab Control -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#2D2D2D"/>
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888"/>
    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA"/>
    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD"/>
    <!-- Used for Checkmark, Radio button, TreeViewItem, Expander ToggleButton glyphs -->
    <SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
    <!-- Simple ScrollViewer 
	ScrollViewer is a Grid control which has a ContentPresenter and a Horizontal and Vertical ScrollBar 
	It is used by ListBox, MenuItem, ComboBox, and TreeView -->
    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>

                        <!-- The visibility of the ScrollBars is controlled by the implementation fo the control -->
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
          
    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">      
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ColorForMenuAndToolBar}"/>              
    </Style>
    <!--   -->
    <LinearGradientBrush x:Key="Grad" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF8E2" Offset="0.0"/>
                <GradientStop Color="#FFECB5" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="#2D2D2D" />  
    <SolidColorBrush x:Key="SolidMenuFontBrush" Color="Black" />
      <SolidColorBrush x:Key="HighlightedBackgroundBrush" Color="#FF797878" />  
  
  <SolidColorBrush x:Key="HighlightedText" Color="#FFFFFFFF" />
  
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border x:Name="Border" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition x:Name="Col3" Width="14"/>
              </Grid.ColumnDefinitions>
              <!-- ContentPresenter to show an Icon if needed -->
    <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon"  VerticalAlignment="Center" ContentSource="Icon"/>
    <!-- Glyph is a checkmark if needed for a checkable menu -->
    <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0"  x:Name="GlyphPanel" VerticalAlignment="Center">
        <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
    </Grid>

    <!-- Content for the menu text etc -->
    <ContentPresenter Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                x:Name="HeaderHost"
                                RecognizesAccessKey="True"
                                ContentSource="Header"/>

    <!-- Content for the menu IGT -->
    <ContentPresenter Grid.Column="2"
                                Margin="8,1,8,1"
                                x:Name="IGTHost"
                                ContentSource="InputGestureText"
                                VerticalAlignment="Center"/>

    <!-- Arrow drawn path which points to the next level of the menu -->
    <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
        <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
    </Grid>

    <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
    <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
        <Border x:Name="SubMenuBorder" Background="{DynamicResource ColorForMenuAndToolBar}"  BorderBrush="DarkGray" BorderThickness="1" Padding="1,1,1,1">
            <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                <StackPanel Background="{DynamicResource ColorForMenuAndToolBar}" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
            </Grid>
        </Border>
    </Popup>
    </Grid>
    </Border>

    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
    <ControlTemplate.Triggers>
        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
        <Trigger Property="Role" Value="TopLevelHeader">
            <Setter Property="Padding" Value="6,1,6,1"/>
            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
            <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
            <Setter Property="Width" Value="Auto" TargetName="Col3"/>
            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
            <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
        </Trigger>

        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
        <Trigger Property="Role" Value="TopLevelItem">
            <Setter Property="Padding" Value="6,1,6,1"/>
            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
        </Trigger>

        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
        <Trigger Property="Role" Value="SubmenuHeader">
            <Setter Property="DockPanel.Dock" Value="Top"/>
            <Setter Property="Padding" Value="0,2,0,2"/>
        </Trigger>

        <!-- Role = SubMenuItem : this is a child menu item which has children-->
        <Trigger Property="Role" Value="SubmenuItem">
            <Setter Property="DockPanel.Dock" Value="Top"/>
            <Setter Property="Padding" Value="0,2,0,2"/>
            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
        </Trigger>
        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
        </Trigger>

        <!-- If no Icon is present the we collapse the Icon Content -->
        <Trigger Property="Icon" Value="{x:Null}">
            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
        </Trigger>

        <!-- The GlyphPanel contains the CheckMark -->
        <Trigger Property="IsChecked" Value="true">
            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
        </Trigger>

        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
        <Trigger Property="IsHighlighted" Value="true">
             <Setter Property="Background" Value="{StaticResource HighlightedBackgroundBrush}" TargetName="Border"/>
              <Setter Property="Foreground" Value="{StaticResource HighlightedText}"/>
              <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" TargetName="Border"/>
        </Trigger>
        <Trigger Property="IsHighlighted" Value="false">
            <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}" TargetName="Border"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource MenuBackgroundBrush}" TargetName="Border"/>
        </Trigger>
        <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="LightGray"/>
        </Trigger>
    </ControlTemplate.Triggers>
    </ControlTemplate>
    </Setter.Value>
    </Setter>
    </Style>

    <!---->
    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Background="{DynamicResource ColorForMenuAndToolBar}" BorderBrush="DarkGray" BorderThickness="1">
                        <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="White"/>
    </Style>
	    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
    </Style>
	 
	<Style TargetType="Button" >
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
			<ControlTemplate TargetType="{x:Type Button}">
			<ControlTemplate.Resources>
				<Storyboard x:Key="Timeline1">
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
						<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
					</DoubleAnimationUsingKeyFrames>
				</Storyboard>
				<Storyboard x:Key="Timeline2">
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
						<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
					</DoubleAnimationUsingKeyFrames>
				</Storyboard>
			</ControlTemplate.Resources>
			<Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
				<Border x:Name="border" Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.507*"/>
							<RowDefinition Height="0.493*"/>
						</Grid.RowDefinitions>
						<Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
							<Border.Background>
								<RadialGradientBrush>
									<RadialGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
											<SkewTransform AngleX="0" AngleY="0"/>
											<RotateTransform Angle="0"/>
											<TranslateTransform X="-0.368" Y="-0.152"/>
										</TransformGroup>
									</RadialGradientBrush.RelativeTransform>
									<GradientStop Color="#B2FF0000" Offset="0"/>
									<GradientStop Color="#00FF0000" Offset="1"/>
								</RadialGradientBrush>
							</Border.Background>
						</Border>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"/>
						<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
									<GradientStop Color="#99FFFFFF" Offset="0"/>
									<GradientStop Color="#33FFFFFF" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
					</Grid>
				</Border>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Opacity" TargetName="shine" Value="0.4"/>
					<Setter Property="Background" TargetName="border" Value="#CC000000"/>
					<Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True">
					<Trigger.EnterActions>
						<BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
					</Trigger.ExitActions>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
			</Setter.Value>
			</Setter>
	</Style>	
</ResourceDictionary>
